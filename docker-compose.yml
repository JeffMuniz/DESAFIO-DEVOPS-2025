version: '3.8'

services:

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: redis-commander
    restart: unless-stopped
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"

  app-flask:
    build: ./app-flask
    ports:
      - "5000:5000"
    environment:
      - REDIS_HOST=redis
    depends_on:
      - redis

  app-node:
    build: ./app-node
    ports:
      - "3002:3000"
    environment:
      - REDIS_HOST=redis
    depends_on:
      - redis

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - grafana
      - prometheus

  loki:
    image: grafana/loki:2.9.0
    container_name: loki
    ports:
      - "3100:3100"
    volumes:
      - ./loki-config.yaml:/etc/loki/local-config.yaml
      - loki-data:/loki
    command: -config.file=/etc/loki/local-config.yaml

  promtail:
    image: grafana/promtail:2.9.0
    container_name: promtail
    volumes:
      - /var/log:/var/log
      - ./promtail.yaml:/etc/promtail/promtail.yaml
    command: -config.file=/etc/promtail/promtail.yaml

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
      - loki
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./grafana/provisioning/dashboards:/var/lib/grafana/dashboards
      - ./grafana/provisioning/dashboards/dashboards.yaml:/etc/grafana/provisioning/dashboards/dashboards.yaml
      - ./grafana/provisioning/datasources/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
vvolumes:
  grafana-storage:
    driver: local
  prometheus-data:
    driver: local
  loki-data:
    driver: local
  redis-data:
    driver: local
  redis-commander-data:
    driver: local
networks:
  default:
    driver: bridge
    name: monitoring-network
  redis-network:
    driver: bridge
    name: redis-network
  grafana-network:
    driver: bridge
    name: grafana-network
  loki-network:
    driver: bridge
    name: loki-network
  prometheus-network:
    driver: bridge
    name: prometheus-network
  redis-commander-network:
    driver: bridge
    name: redis-commander-network
  app-flask-network:
    driver: bridge
    name: app-flask-network
  app-node-network:
    driver: bridge
    name: app-node-network